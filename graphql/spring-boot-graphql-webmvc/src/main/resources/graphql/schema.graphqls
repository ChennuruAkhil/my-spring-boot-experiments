scalar LocalDateTime

type Author{
    id:ID!
    firstName:String!
    middleName:String
    lastName:String!
    mobile:String
    email:String!
    posts: [Post]
}

type Post{
    id:ID!
    title:String!
    content:String!
    published:Boolean
    createdAt:LocalDateTime
    modifiedAt:LocalDateTime
    publishedAt:LocalDateTime
    details: PostDetails
    comments: [PostComments]
    tags:[Tags]
}

type Tags {
    tagName:String!
    tagDescription:String
}

type PostComments {
    id:ID
    title:String!
    content:String
    published:Boolean
    publishedAt:LocalDateTime
    createdAt:LocalDateTime
}

type PostDetails {
    id:ID!
    detailsKey:String
    createdAt:LocalDateTime!
}

type Query {
    allAuthors: [Author!]
    findAuthorByEmailId(email: String!): Author
    allTags: [Tags!]
    findTagByName(tagName: String!) : Tags
    allPostsByEmail(email: String!): [Post]
}

type Mutation {
    createAuthor(authorInput: AuthorInput!): Author
    createTag(tagName: String!, tagDescription: String) : Tags
    updateTagDescription(tagName: String!, tagDescription: String!) : Tags
    deleteTag(tagName: String!) : Boolean
    createPost(newPostRequest: newPostRequest!): Post
}

input newPostRequest {
    title:String!
    content:String!
    email:String!
    published:Boolean
    details: PostDetailsInput
    tags:[TagsInput]
}

input TagsInput {
    tagName:String!
    tagDescription:String
}

input PostDetailsInput {
    detailsKey:String
}

input PostCommentsInput {
    title:String!
    content:String
    published:Boolean
}

input AuthorInput {
    firstName:String!
    middleName: String
    lastName:String!
    mobile:String
    email:String!
}
