openapi: 3.0.1
info:
  title: boot-jpa-customsequence
  version: v1
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: /

paths:
  /api/orders/{id}:
    get:
      tags:
        - order-controller
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    put:
      tags:
        - order-controller
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    delete:
      tags:
        - order-controller
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /api/customers/{id}:
    get:
      tags:
        - customer-controller
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    put:
      tags:
        - customer-controller
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    delete:
      tags:
        - customer-controller
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /api/orders:
    get:
      tags:
        - order-controller
      operationId: getAllOrders
      parameters:
        - name: pageNo
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: id
        - name: sortDir
          in: query
          required: false
          schema:
            type: string
            default: asc
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResultOrderResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    post:
      tags:
        - order-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /api/customers:
    get:
      tags:
        - customer-controller
      operationId: getAllCustomers
      parameters:
        - name: pageNo
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: id
        - name: sortDir
          in: query
          required: false
          schema:
            type: string
            default: asc
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResultCustomer'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    post:
      tags:
        - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
components:
  schemas:
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: object
    Customer:
      required:
        - text
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    Order:
      required:
        - text
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
    CustomerDTO:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
    OrderResponse:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        customerDTO:
          $ref: '#/components/schemas/CustomerDTO'
    PagedResultOrderResponse:
      type: object
      properties:
        isFirst:
          type: boolean
        isLast:
          type: boolean
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
        totalElements:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
    PagedResultCustomer:
      type: object
      properties:
        isFirst:
          type: boolean
        isLast:
          type: boolean
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        totalElements:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
